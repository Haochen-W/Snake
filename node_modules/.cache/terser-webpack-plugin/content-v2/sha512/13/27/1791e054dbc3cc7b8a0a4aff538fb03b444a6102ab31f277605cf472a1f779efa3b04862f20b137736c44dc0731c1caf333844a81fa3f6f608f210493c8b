{"map":"{\"version\":3,\"sources\":[\"/Users/JasonWu/snake/src/snake.js\",\"/Users/JasonWu/snake/src/Board.js\",\"/Users/JasonWu/snake/src/App.js\",\"/Users/JasonWu/snake/src/serviceWorker.js\",\"/Users/JasonWu/snake/src/index.js\"],\"names\":[\"Snake\",\"snake\",\"this\",\"props\",\"body\",\"some\",\"cord\",\"_\",\"isEqual\",\"head\",\"tail\",\"_this\",\"running\",\"setInterval\",\"direction\",\"y\",\"x\",\"clearInterval\",\"selfCollide\",\"alive\",\"newCell\",\"push\",\"splice\",\"changeDirection\",\"speed\",\"_this2\",\"react_default\",\"a\",\"createElement\",\"id\",\"react_keyboard_event_handler_default\",\"handleKeys\",\"onKeyEvent\",\"key\",\"e\",\"endGame\",\"run\",\"React\",\"Component\",\"Board\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"food\",\"ctx\",\"strokeStyle\",\"fillStyle\",\"fillRect\",\"vertical\",\"boardSize\",\"beginPath\",\"moveTo\",\"lineTo\",\"stroke\",\"horizontal\",\"_this$state\",\"forEach\",\"canvas\",\"refs\",\"gameBoard\",\"setState\",\"getContext\",\"drawGrid\",\"drawSnake\",\"drawFood\",\"newState\",\"assign\",\"canvasMoveSnake\",\"_this$state2\",\"drawRect\",\"addBody\",\"drawGrid2\",\"l\",\"h\",\"drawBoard\",\"_this$state3\",\"position\",\"Math\",\"floor\",\"random\",\"exists\",\"point\",\"newTail\",\"alert\",\"className\",\"ref\",\"width\",\"height\",\"resetBoard\",\"speedDown\",\"speedUp\",\"src_snake\",\"bind\",\"App\",\"document\",\"title\",\"src_Board\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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ACrBtE,KAAKsE,SAAS,GAAG,EAAE,EAAE,GACrBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,EAAE,EAAE,GACrBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,EAAE,GAAG,EAAE,GACrBtE,KAAKsE,SAAS,EAAE,GAAG,EAAE,GACrBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GAGtBtE,KAAKsE,SAAS,EAAE,GAAG,EAAE,GACrBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,EAAE,EAAE,GACrBtE,KAAKsE,SAAS,GAAG,EAAE,EAAE,GACrBtE,KAAKsE,SAAS,GAAG,EAAE,EAAE,GACrBtE,KAAKsE,SAAS,EAAE,GAAG,EAAE,GACrBtE,KAAKsE,SAAS,EAAE,GAAG,EAAE,GACrBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GAGtBtE,KAAKsE,SAAS,EAAE,GAAG,EAAE,GACrBtE,KAAKsE,SAAS,EAAE,GAAG,EAAE,GACrBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,GACtBtE,KAAKsE,SAAS,GAAG,GAAG,EAAE,wCAItBtE,KAAK6D,SAAU,CACX9D,MAAO,CACLQ,KAAM,CACJO,EAAG,GACHD,EAAG,IAELL,KAAM,CACJM,EAAG,GACHD,EAAG,IAELD,UAAW,GACXV,KAAM,CAAC,CAACY,EAAE,GAAGD,EAAE,KACfH,SAAS,EACTO,OAAO,EACPK,MAAO,EACPsB,KAAM,MAGZ5C,KAAK2E,8CAIL,IAAIT,EAAW5B,OAAO6B,OAAO,GAAInE,KAAK2C,OACtCuB,EAASnE,MAAMuB,MAAQtB,KAAK2C,MAAM5C,MAAMuB,MAAQ,GAChDtB,KAAK6D,SAASK,uCAId,IAAIA,EAAW5B,OAAO6B,OAAO,GAAInE,KAAK2C,OAClC3C,KAAK2C,MAAM5C,MAAMuB,OAAS,IAC5B4C,EAASnE,MAAMuB,MAAQtB,KAAK2C,MAAM5C,MAAMuB,MAAQ,IAEhD4C,EAASnE,MAAMuB,MAAQtB,KAAK2C,MAAM5C,MAAMuB,MACxC8D,MAAM,8BAERpF,KAAK6D,SAASK,oCAGP,IAAA3C,EAAAvB,KACL,OACIwB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,GAAG,gBAAgB0D,UAAU,mBAC9B7D,EAAAC,EAAAC,cAAA,SAAA,CAAQC,GAAG,YAAY2D,IAAI,YAAYC,MAzQrC,IAyQuDC,OAzQvD,MA0QAhE,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,WAAY,CAAC,IAAK,MAAO,IAAK,KAC9BC,WAAY,SAACC,EAAKC,GACL,MAARD,EACDR,EAAKkE,aACY,QAAR1D,EACTR,EAAKU,UACY,MAARF,EACTR,EAAKmE,YACY,MAAR3D,GACTR,EAAKoE,aAGTnE,EAAAC,EAAAC,cAACkE,EAAD,CAAO7F,MAAOC,KAAK2C,MAAM5C,MACzBsB,gBAAiBrB,KAAKqB,gBAAgBwE,KAAK7F,MAC3CiC,QAASjC,KAAKiC,QAAQ4D,KAAK7F,MAE3BiE,SAAUjE,KAAKiE,SAAS4B,KAAK7F,gBAxR7BmC,EAAAA,EAAMC,WCYX0D,IAAAA,EAff,WAME,OALAC,SAASC,MAAQ,iCACjBZ,MAAM,gLAKJ5D,EAAAC,EAAAC,cAAA,MAAA,CAAK2D,UAAU,OACb7D,EAAAC,EAAAC,cAAA,SAAA,CAAQ2D,UAAU,cAChB7D,EAAAC,EAAAC,cAACuE,EAAD,SCAYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAASV,SAASW,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\nimport KeyboardEventHandler from 'react-keyboard-event-handler'\\nimport _ from 'lodash'\\n\\nclass Snake extends React.Component{\\n    selfCollide() {\\n      const snake = this.props.snake;\\n      return snake.body.some(cord => _.isEqual(cord, snake.head)) || _.isEqual(snake.head, snake.tail)\\n    }\\n    run() {\\n        this.props.snake.running = true;\\n        var running = setInterval(() => {\\n            const snake = this.props.snake;\\n            switch(snake.direction){\\n                case 'up':\\n                  snake.head.y -= 1;\\n                  break;\\n                case 'down':\\n                  snake.head.y += 1;\\n                  break;\\n                    case 'left':\\n                snake.head.x -= 1;\\n                  break;\\n                case 'right':\\n                  snake.head.x += 1;\\n                  break;\\n                default:\\n                break;\\n            }\\n            if(this.props.snake.running === false){\\n                clearInterval(running)\\n            }\\n            if (snake.head.x > 29 || snake.head.y > 29 || snake.head.x < 0 || snake.head.y < 0 || this.selfCollide()) {\\n              snake.running = false\\n              snake.alive = false\\n              clearInterval(running);\\n            }\\n            var newCell = {\\n              x: snake.head.x,\\n              y: snake.head.y\\n            }\\n            snake.body.push(newCell)\\n            snake.tail.x = snake.body[0].x;\\n            snake.tail.y = snake.body[0].y;\\n            snake.body.splice(0,1);\\n            this.props.changeDirection(snake.direction);\\n        }, 200 / this.props.snake.speed);\\n      }\\n\\n    render(){\\n       return(\\n           <div id=\\\"Snake\\\">\\n            <KeyboardEventHandler\\n                  handleKeys={['left', 'up', 'right', 'down', 'space']}\\n                  onKeyEvent={(key, e) => {\\n                    if (key === 'up' && (this.props.snake.direction === 'down' || this.props.snake.direction === 'up')) {\\n                      return\\n                    }\\n                    if (key === 'down' && (this.props.snake.direction === 'down' || this.props.snake.direction === 'up')) {\\n                      return\\n                    }\\n                    if (key === 'left' && (this.props.snake.direction === 'left' || this.props.snake.direction === 'right')) {\\n                      return\\n                    }\\n                    if (key === 'right' && (this.props.snake.direction === 'left' || this.props.snake.direction === 'right')) {\\n                      return\\n                    }\\n                    if (this.props.snake.alive === false && this.props.snake.running === false){\\n                        this.props.endGame();\\n                    }\\n                    if (!this.props.snake.running && this.props.snake.alive ){\\n                        this.run();\\n                    }\\n                    this.props.changeDirection(key);\\n                  }}/>\\n           </div>\\n       );\\n   }\\n}\\n\\nexport default Snake;\",\"import React from 'react';\\nimport Snake from './snake';\\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\\nconst boardSize = 720;\\nconst cellSize = boardSize / 30;\\n\\nclass Board extends React.Component{\\n  constructor(props){\\n    super(props);\\n    this.state = {\\n      snake: {\\n        head: {\\n          x: 15,\\n          y: 15\\n        },\\n        tail: {\\n          x: 15,\\n          y: 15\\n        },\\n        direction: '',\\n        body: [{x:15,y:15}],\\n        running: false,\\n        alive: true,\\n        speed: 2,\\n        food: {}\\n      }\\n    }\\n  }\\n\\n    drawGrid() {\\n        const {ctx} = this.state;\\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.2)';\\n        //'#bbdefb'; // strokeStyle is a field, no ()\\n        ctx.fillStyle = '#9575cd';\\n        ctx.fillRect(0, 0, boardSize, boardSize) // fillrect is a function, so has ()\\n        for (var vertical = cellSize; vertical < boardSize; vertical += cellSize){\\n          ctx.beginPath();\\n          ctx.moveTo(vertical, 0);\\n          ctx.lineTo(vertical, boardSize);\\n          ctx.stroke();\\n        }\\n      \\n        for (var horizontal = cellSize; horizontal < boardSize; horizontal += cellSize){\\n          ctx.beginPath();\\n          ctx.moveTo(0, horizontal);\\n          ctx.lineTo(boardSize ,horizontal);\\n          ctx.stroke();\\n        }\\n    }\\n\\n    drawGrid2() {\\n      const {ctx} = this.state;\\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.01)'; // strokeStyle is a field, no ()\\n      ctx.fillStyle = '#9575cd';\\n      //ctx.fillRect(0, 0, boardSize, boardSize) // fillrect is a function, so has ()\\n      for (var vertical = cellSize; vertical < boardSize; vertical += cellSize){\\n        ctx.beginPath();\\n        ctx.moveTo(vertical, 0);\\n        ctx.lineTo(vertical, boardSize);\\n        ctx.stroke();\\n      }\\n    \\n      for (var horizontal = cellSize; horizontal < boardSize; horizontal += cellSize){\\n        ctx.beginPath();\\n        ctx.moveTo(0, horizontal);\\n        ctx.lineTo(boardSize ,horizontal);\\n        ctx.stroke();\\n      }\\n  }\\n\\n    drawSnake(){\\n      const {ctx, snake} = this.state\\n      ctx.fillStyle = '#795548';\\n      snake.body.forEach(cord => { // for loop through the snake's body, fill rect\\n        ctx.fillRect(cord.x * cellSize, cord.y * cellSize, 1 * cellSize, 1 * cellSize);\\n      })\\n    }\\n\\n    drawBoard(){\\n        const canvas = this.refs.gameBoard\\n        this.setState({\\n          canvas: canvas,\\n          ctx: canvas.getContext('2d')\\n        }, function () {\\n          this.drawGrid();\\n          this.drawSnake();\\n          this.drawFood();\\n        })\\n    }\\n    \\n    changeDirection (direction) {\\n      let newState = Object.assign({}, this.state);\\n      newState.snake.direction = direction;\\n      this.setState(newState);\\n      this.canvasMoveSnake();\\n    }\\n\\n    canvasMoveSnake(){\\n      const {ctx, snake} = this.state\\n      ctx.fillStyle = '#9575cd';\\n      this.drawRect(snake.tail.x,snake.tail.y,1,1);\\n      ctx.fillStyle = 'yellow';\\n      this.drawRect(snake.head.x,snake.head.y,1,1);\\n      if (snake.head.x === snake.food.x && snake.head.y === snake.food.y) {\\n        this.addBody();\\n        this.drawFood();\\n      }\\n      if (snake.alive === false && snake.running === false){\\n        this.endGame();\\n      }\\n      this.drawGrid2();\\n    }\\n\\n    drawRect(x, y, l, h) {\\n      const {ctx} = this.state;\\n      ctx.fillRect(x * cellSize, y * cellSize, l * cellSize, h * cellSize);\\n    }\\n    \\n    componentDidMount () {\\n        this.drawBoard();\\n    } //as soon as the object is created, draw the board\\n\\n    drawFood () {\\n      const {ctx, snake} = this.state;\\n      ctx.fillStyle = 'red';\\n      var position = {\\n        x: Math.floor(Math.random() * 30),\\n        y: Math.floor(Math.random() * 30)\\n      }\\n      while (this.exists(position)) {\\n        position.x = Math.floor(Math.random() * 30);\\n        position.y = Math.floor(Math.random() * 30);\\n      }\\n      snake.food = position;\\n      this.setState({\\n        snake:snake\\n      })\\n      this.drawRect(position.x, position.y,1,1);\\n    }\\n    exists(point) {\\n      const {snake} = this.state;\\n    \\n      for (var cord in snake.body) {\\n        if (point.x === cord.x && point.y === cord.y) {\\n          return true\\n        }\\n      }\\n      return false\\n    }\\n\\n    addBody() {\\n      const {snake} = this.state\\n      var newTail = {}\\n      switch(snake.direction){\\n        case 'up':\\n          newTail = {x: snake.tail.x, y: snake.tail.y - 1}\\n          break;\\n        case 'down':\\n          newTail = {x: snake.tail.x, y: snake.tail.y + 1}\\n          break;\\n        case 'left':\\n          newTail = {x: snake.tail.x - 1, y: snake.tail.y}\\n          break;\\n        case 'right':\\n          newTail = {x: snake.tail.x + 1, y: snake.tail.y}\\n          break;\\n        default:\\n          break;\\n      }\\n      snake.body.push(newTail)\\n      snake.tail = newTail\\n    }\\n\\n    endGame() {\\n      const {ctx} = this.state\\n    \\n      let newState = Object.assign({}, this.state);\\n      newState.snake.running = false;\\n      newState.snake.alive = false;\\n      this.setState(newState);\\n    \\n      //Horizonal Lines\\n      ctx.fillStyle = 'white';\\n      this.drawRect(5,9,4,1);\\n      this.drawRect(5,13,4,1);\\n      this.drawRect(11,9,2,1);\\n      this.drawRect(11,12,2,1);\\n      this.drawRect(22,9,3,1);\\n      this.drawRect(22,11,3,1);\\n      this.drawRect(22,13,3,1);\\n      this.drawRect(6,16,2,1);\\n      this.drawRect(6,20,2,1);\\n      this.drawRect(16,16,4,1);\\n      this.drawRect(16,18,4,1);\\n      this.drawRect(16,20,4,1);\\n      this.drawRect(21,16,4,1);\\n      this.drawRect(21,18,4,1);\\n      this.drawRect(23,20,2,1);\\n    \\n      //Vertical Lines\\n      this.drawRect(5,10,1,3);\\n      this.drawRect(10,10,1,4);\\n      this.drawRect(13,10,1,4);\\n      this.drawRect(15,9,1,5);\\n      this.drawRect(19,9,1,5);\\n      this.drawRect(21,9,1,5);\\n      this.drawRect(5,17,1,3);\\n      this.drawRect(8,17,1,3);\\n      this.drawRect(10,16,1,3);\\n      this.drawRect(14,16,1,3);\\n      this.drawRect(16,16,1,5);\\n      this.drawRect(21,16,1,5);\\n      this.drawRect(24,16,1,3);\\n    \\n      //Dots\\n      this.drawRect(7,11,1,1);\\n      this.drawRect(8,12,1,1);\\n      this.drawRect(16,10,1,1);\\n      this.drawRect(17,11,1,1);\\n      this.drawRect(18,10,1,1);\\n      this.drawRect(11,19,1,1);\\n      this.drawRect(12,20,1,1);\\n      this.drawRect(13,19,1,1);\\n      this.drawRect(22,19,1,1);\\n    }\\n\\n    resetBoard(){\\n      this.setState(({\\n          snake: {\\n            head: {\\n              x: 15,\\n              y: 15\\n            },\\n            tail: {\\n              x: 15,\\n              y: 15\\n            },\\n            direction: '',\\n            body: [{x:15,y:15}],\\n            running: false,\\n            alive: true,\\n            speed: 2,\\n            food: {}\\n          }\\n      }))\\n      this.drawBoard();\\n    }\\n\\n    speedUp(){\\n      let newState = Object.assign({}, this.state);\\n      newState.snake.speed = this.state.snake.speed + 0.3;        \\n      this.setState(newState);\\n    }\\n\\n    speedDown(){\\n      let newState = Object.assign({}, this.state);\\n      if (this.state.snake.speed >= 1.3) {\\n        newState.snake.speed = this.state.snake.speed - 0.3;\\n      } else {\\n        newState.snake.speed = this.state.snake.speed;\\n        alert(\\\"This is the lowest speed!\\\")\\n      }\\n      this.setState(newState);\\n    }\\n\\n    render() {\\n        return (\\n            <div id='gameContainer' className='container-fluid'>\\n                <canvas id='gameBoard' ref=\\\"gameBoard\\\" width={boardSize} height={boardSize} />\\n                  <KeyboardEventHandler\\n                    handleKeys={['r', 'esc', '[', ']']}\\n                    onKeyEvent={(key, e) => {\\n                      if(key === 'r'){\\n                        this.resetBoard();\\n                      } else if (key === 'esc'){\\n                        this.endGame();\\n                      } else if (key === '['){\\n                        this.speedDown();\\n                      } else if (key === ']'){\\n                        this.speedUp();\\n                      }\\n                    }}/>\\n                    <Snake snake={this.state.snake}\\n                    changeDirection={this.changeDirection.bind(this)}\\n                    endGame={this.endGame.bind(this)}\\n                    //drawGrid2={this.drawGrid2.bind(this)}\\n                    drawFood={this.drawFood.bind(this)}\\n                  />\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default Board;\",\"import React from 'react';\\nimport './App.css';\\nimport Board from './Board'\\nfunction App() {\\n  document.title = 'Snake Game Designed by Jason W';\\n  alert(\\\"   Use arrows to control the snake. \\\\n \\\\\\n  Use \\\\\\\"[\\\\\\\" and \\\\\\\"]\\\\\\\" to reduce or increase the speed of motion before the game starts. \\\\n \\\\\\n  Use \\\\\\\"r\\\\\\\" to restart the game. \\\\n \\\\\\n  Let's GO!\\\")\\n  return (\\n    <div className=\\\"App\\\">\\n      <header className=\\\"App-header\\\">\\n        <Board />\\n      </header>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,a){e.exports=a(22)},16:function(e,t,a){},17:function(e,t,a){},22:function(e,t,a){\"use strict\";a.r(t);var n=a(0),i=a.n(n),s=a(10),r=a.n(s),o=(a(16),a(17),a(1)),d=a(2),c=a(5),h=a(3),l=a(6),u=a(4),p=a.n(u),w=a(7),y=a.n(w),k=function(e){function t(){return Object(o.a)(this,t),Object(c.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(l.a)(t,e),Object(d.a)(t,[{key:\"selfCollide\",value:function(){var e=this.props.snake;return e.body.some(function(t){return y.a.isEqual(t,e.head)})||y.a.isEqual(e.head,e.tail)}},{key:\"run\",value:function(){var e=this;this.props.snake.running=!0;var t=setInterval(function(){var a=e.props.snake;switch(a.direction){case\"up\":a.head.y-=1;break;case\"down\":a.head.y+=1;break;case\"left\":a.head.x-=1;break;case\"right\":a.head.x+=1}!1===e.props.snake.running&&clearInterval(t),(a.head.x>29||a.head.y>29||a.head.x<0||a.head.y<0||e.selfCollide())&&(a.running=!1,a.alive=!1,clearInterval(t));var n={x:a.head.x,y:a.head.y};a.body.push(n),a.tail.x=a.body[0].x,a.tail.y=a.body[0].y,a.body.splice(0,1),e.props.changeDirection(a.direction)},200/this.props.snake.speed)}},{key:\"render\",value:function(){var e=this;return i.a.createElement(\"div\",{id:\"Snake\"},i.a.createElement(p.a,{handleKeys:[\"left\",\"up\",\"right\",\"down\",\"space\"],onKeyEvent:function(t,a){(\"up\"!==t||\"down\"!==e.props.snake.direction&&\"up\"!==e.props.snake.direction)&&(\"down\"!==t||\"down\"!==e.props.snake.direction&&\"up\"!==e.props.snake.direction)&&(\"left\"!==t||\"left\"!==e.props.snake.direction&&\"right\"!==e.props.snake.direction)&&(\"right\"!==t||\"left\"!==e.props.snake.direction&&\"right\"!==e.props.snake.direction)&&(!1===e.props.snake.alive&&!1===e.props.snake.running&&e.props.endGame(),!e.props.snake.running&&e.props.snake.alive&&e.run(),e.props.changeDirection(t))}}))}}]),t}(i.a.Component),v=function(e){function t(e){var a;return Object(o.a)(this,t),(a=Object(c.a)(this,Object(h.a)(t).call(this,e))).state={snake:{head:{x:15,y:15},tail:{x:15,y:15},direction:\"\",body:[{x:15,y:15}],running:!1,alive:!0,speed:2,food:{}}},a}return Object(l.a)(t,e),Object(d.a)(t,[{key:\"drawGrid\",value:function(){var e=this.state.ctx;e.strokeStyle=\"rgba(255, 255, 255, 0.2)\",e.fillStyle=\"#9575cd\",e.fillRect(0,0,720,720);for(var t=24;t<720;t+=24)e.beginPath(),e.moveTo(t,0),e.lineTo(t,720),e.stroke();for(var a=24;a<720;a+=24)e.beginPath(),e.moveTo(0,a),e.lineTo(720,a),e.stroke()}},{key:\"drawGrid2\",value:function(){var e=this.state.ctx;e.strokeStyle=\"rgba(255, 255, 255, 0.01)\",e.fillStyle=\"#9575cd\";for(var t=24;t<720;t+=24)e.beginPath(),e.moveTo(t,0),e.lineTo(t,720),e.stroke();for(var a=24;a<720;a+=24)e.beginPath(),e.moveTo(0,a),e.lineTo(720,a),e.stroke()}},{key:\"drawSnake\",value:function(){var e=this.state,t=e.ctx,a=e.snake;t.fillStyle=\"#795548\",a.body.forEach(function(e){t.fillRect(24*e.x,24*e.y,24,24)})}},{key:\"drawBoard\",value:function(){var e=this.refs.gameBoard;this.setState({canvas:e,ctx:e.getContext(\"2d\")},function(){this.drawGrid(),this.drawSnake(),this.drawFood()})}},{key:\"changeDirection\",value:function(e){var t=Object.assign({},this.state);t.snake.direction=e,this.setState(t),this.canvasMoveSnake()}},{key:\"canvasMoveSnake\",value:function(){var e=this.state,t=e.ctx,a=e.snake;t.fillStyle=\"#9575cd\",this.drawRect(a.tail.x,a.tail.y,1,1),t.fillStyle=\"yellow\",this.drawRect(a.head.x,a.head.y,1,1),a.head.x===a.food.x&&a.head.y===a.food.y&&(this.addBody(),this.drawFood()),!1===a.alive&&!1===a.running&&this.endGame(),this.drawGrid2()}},{key:\"drawRect\",value:function(e,t,a,n){this.state.ctx.fillRect(24*e,24*t,24*a,24*n)}},{key:\"componentDidMount\",value:function(){this.drawBoard()}},{key:\"drawFood\",value:function(){var e=this.state,t=e.ctx,a=e.snake;t.fillStyle=\"red\";for(var n={x:Math.floor(30*Math.random()),y:Math.floor(30*Math.random())};this.exists(n);)n.x=Math.floor(30*Math.random()),n.y=Math.floor(30*Math.random());a.food=n,this.setState({snake:a}),this.drawRect(n.x,n.y,1,1)}},{key:\"exists\",value:function(e){var t=this.state.snake;for(var a in t.body)if(e.x===a.x&&e.y===a.y)return!0;return!1}},{key:\"addBody\",value:function(){var e=this.state.snake,t={};switch(e.direction){case\"up\":t={x:e.tail.x,y:e.tail.y-1};break;case\"down\":t={x:e.tail.x,y:e.tail.y+1};break;case\"left\":t={x:e.tail.x-1,y:e.tail.y};break;case\"right\":t={x:e.tail.x+1,y:e.tail.y}}e.body.push(t),e.tail=t}},{key:\"endGame\",value:function(){var e=this.state.ctx,t=Object.assign({},this.state);t.snake.running=!1,t.snake.alive=!1,this.setState(t),e.fillStyle=\"white\",this.drawRect(5,9,4,1),this.drawRect(5,13,4,1),this.drawRect(11,9,2,1),this.drawRect(11,12,2,1),this.drawRect(22,9,3,1),this.drawRect(22,11,3,1),this.drawRect(22,13,3,1),this.drawRect(6,16,2,1),this.drawRect(6,20,2,1),this.drawRect(16,16,4,1),this.drawRect(16,18,4,1),this.drawRect(16,20,4,1),this.drawRect(21,16,4,1),this.drawRect(21,18,4,1),this.drawRect(23,20,2,1),this.drawRect(5,10,1,3),this.drawRect(10,10,1,4),this.drawRect(13,10,1,4),this.drawRect(15,9,1,5),this.drawRect(19,9,1,5),this.drawRect(21,9,1,5),this.drawRect(5,17,1,3),this.drawRect(8,17,1,3),this.drawRect(10,16,1,3),this.drawRect(14,16,1,3),this.drawRect(16,16,1,5),this.drawRect(21,16,1,5),this.drawRect(24,16,1,3),this.drawRect(7,11,1,1),this.drawRect(8,12,1,1),this.drawRect(16,10,1,1),this.drawRect(17,11,1,1),this.drawRect(18,10,1,1),this.drawRect(11,19,1,1),this.drawRect(12,20,1,1),this.drawRect(13,19,1,1),this.drawRect(22,19,1,1)}},{key:\"resetBoard\",value:function(){this.setState({snake:{head:{x:15,y:15},tail:{x:15,y:15},direction:\"\",body:[{x:15,y:15}],running:!1,alive:!0,speed:2,food:{}}}),this.drawBoard()}},{key:\"speedUp\",value:function(){var e=Object.assign({},this.state);e.snake.speed=this.state.snake.speed+.3,this.setState(e)}},{key:\"speedDown\",value:function(){var e=Object.assign({},this.state);this.state.snake.speed>=1.3?e.snake.speed=this.state.snake.speed-.3:(e.snake.speed=this.state.snake.speed,alert(\"This is the lowest speed!\")),this.setState(e)}},{key:\"render\",value:function(){var e=this;return i.a.createElement(\"div\",{id:\"gameContainer\",className:\"container-fluid\"},i.a.createElement(\"canvas\",{id:\"gameBoard\",ref:\"gameBoard\",width:720,height:720}),i.a.createElement(p.a,{handleKeys:[\"r\",\"esc\",\"[\",\"]\"],onKeyEvent:function(t,a){\"r\"===t?e.resetBoard():\"esc\"===t?e.endGame():\"[\"===t?e.speedDown():\"]\"===t&&e.speedUp()}}),i.a.createElement(k,{snake:this.state.snake,changeDirection:this.changeDirection.bind(this),endGame:this.endGame.bind(this),drawFood:this.drawFood.bind(this)}))}}]),t}(i.a.Component);var f=function(){return document.title=\"Snake Game Designed by Jason W\",alert('   Use arrows to control the snake. \\n   Use \"[\" and \"]\" to reduce or increase the speed of motion before the game starts. \\n   Use \"r\" to restart the game. \\n   Let\\'s GO!'),i.a.createElement(\"div\",{className:\"App\"},i.a.createElement(\"header\",{className:\"App-header\"},i.a.createElement(v,null)))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(i.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[11,1,2]]]);","extractedComments":[]}