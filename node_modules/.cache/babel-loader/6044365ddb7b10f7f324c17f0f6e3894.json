{"ast":null,"code":"var _jsxFileName = \"/Users/JasonWu/snake/src/snake.js\";\nimport React from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nclass Snake extends React.Component {\n  run() {\n    this.props.snake.running = false;\n    var running = setInterval(() => {\n      const snake = this.props.snake;\n\n      switch (snake.direction) {\n        case 'up':\n          snake.head.y -= 1;\n          break;\n\n        case 'down':\n          snake.head.y += 1;\n          break;\n\n        case 'left':\n          snake.head.x -= 1;\n          break;\n\n        case 'right':\n          snake.head.x += 1;\n          break;\n\n        default:\n          break;\n      }\n\n      if (this.props.snake.running === false) {\n        clearInterval(running);\n      } else if (snake.head.x > 29 || snake.head.y > 29 || snake.head.x < 0 || snake.head.y < 0) {\n        snake.running = false;\n        snake.alive = false;\n        clearInterval(running);\n      }\n\n      console.log(\"q\", snake);\n      this.props.changeDirection(snake.direction);\n    }, 200 / this.props.snake.speed);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"Snake\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(KeyboardEventHandler, {\n      handleKeys: ['left', 'up', 'right', 'down', 'space'],\n      onKeyEvent: (key, e) => {\n        console.log('test', this.props.snake);\n\n        if (!this.props.snake.running && this.props.snake.alive) {\n          this.run();\n        }\n\n        this.props.changeDirection(key);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Snake;","map":{"version":3,"sources":["/Users/JasonWu/snake/src/snake.js"],"names":["React","KeyboardEventHandler","Snake","Component","run","props","snake","running","setInterval","direction","head","y","x","clearInterval","alive","console","log","changeDirection","speed","render","key","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,8BAAjC;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;AAE/BC,EAAAA,GAAG,GAAG;AACF,SAAKC,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,GAA2B,KAA3B;AACA,QAAIA,OAAO,GAAGC,WAAW,CAAC,MAAM;AAC5B,YAAMF,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;;AACA,cAAOA,KAAK,CAACG,SAAb;AACI,aAAK,IAAL;AACEH,UAAAA,KAAK,CAACI,IAAN,CAAWC,CAAX,IAAgB,CAAhB;AACA;;AACF,aAAK,MAAL;AACEL,UAAAA,KAAK,CAACI,IAAN,CAAWC,CAAX,IAAgB,CAAhB;AACA;;AACE,aAAK,MAAL;AACJL,UAAAA,KAAK,CAACI,IAAN,CAAWE,CAAX,IAAgB,CAAhB;AACE;;AACF,aAAK,OAAL;AACEN,UAAAA,KAAK,CAACI,IAAN,CAAWE,CAAX,IAAgB,CAAhB;AACA;;AACF;AACA;AAdJ;;AAiBA,UAAG,KAAKP,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,KAA6B,KAAhC,EAAsC;AAClCM,QAAAA,aAAa,CAACN,OAAD,CAAb;AACH,OAFD,MAGK,IAAID,KAAK,CAACI,IAAN,CAAWE,CAAX,GAAe,EAAf,IAAqBN,KAAK,CAACI,IAAN,CAAWC,CAAX,GAAe,EAApC,IAA0CL,KAAK,CAACI,IAAN,CAAWE,CAAX,GAAe,CAAzD,IAA8DN,KAAK,CAACI,IAAN,CAAWC,CAAX,GAAe,CAAjF,EAAoF;AACvFL,QAAAA,KAAK,CAACC,OAAN,GAAgB,KAAhB;AACAD,QAAAA,KAAK,CAACQ,KAAN,GAAc,KAAd;AACAD,QAAAA,aAAa,CAACN,OAAD,CAAb;AACD;;AACDQ,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBV,KAAjB;AACA,WAAKD,KAAL,CAAWY,eAAX,CAA2BX,KAAK,CAACG,SAAjC;AACH,KA7BwB,EA6BtB,MAAM,KAAKJ,KAAL,CAAWC,KAAX,CAAiBY,KA7BD,CAAzB;AA8BD;;AAEHC,EAAAA,MAAM,GAAE;AACL,WACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,oBAAD;AACM,MAAA,UAAU,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,OAAf,EAAwB,MAAxB,EAAgC,OAAhC,CADlB;AAEM,MAAA,UAAU,EAAE,CAACC,GAAD,EAAMC,CAAN,KAAY;AACpBN,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKX,KAAL,CAAWC,KAA/B;;AACF,YAAI,CAAC,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,OAAlB,IAA6B,KAAKF,KAAL,CAAWC,KAAX,CAAiBQ,KAAlD,EAAyD;AACvD,eAAKV,GAAL;AACD;;AACD,aAAKC,KAAL,CAAWY,eAAX,CAA2BG,GAA3B;AACD,OARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADJ;AAaH;;AAlD+B;;AAqDnC,eAAelB,KAAf","sourcesContent":["import React from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler'\n\nclass Snake extends React.Component{\n\n    run() {\n        this.props.snake.running = false;\n        var running = setInterval(() => {\n            const snake = this.props.snake;\n            switch(snake.direction){\n                case 'up':\n                  snake.head.y -= 1;\n                  break;\n                case 'down':\n                  snake.head.y += 1;\n                  break;\n                    case 'left':\n                snake.head.x -= 1;\n                  break;\n                case 'right':\n                  snake.head.x += 1;\n                  break;\n                default:\n                break;\n            }\n  \n            if(this.props.snake.running === false){\n                clearInterval(running)\n            }\n            else if (snake.head.x > 29 || snake.head.y > 29 || snake.head.x < 0 || snake.head.y < 0) {\n              snake.running = false\n              snake.alive = false\n              clearInterval(running);\n            }\n            console.log(\"q\", snake)\n            this.props.changeDirection(snake.direction);\n        }, 200 / this.props.snake.speed);\n      }\n\n    render(){\n       return(\n           <div id=\"Snake\">\n            <KeyboardEventHandler\n                  handleKeys={['left', 'up', 'right', 'down', 'space']}\n                  onKeyEvent={(key, e) => {\n                      console.log('test', this.props.snake)\n                    if (!this.props.snake.running && this.props.snake.alive ){\n                      this.run();\n                    }\n                    this.props.changeDirection(key);\n                  }} />   \n           </div>\n       );\n   }\n}\n\nexport default Snake;"]},"metadata":{},"sourceType":"module"}